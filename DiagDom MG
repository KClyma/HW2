def MakeDiagDom(A):
    """
    This function reorders the rows of matrix A to put the largest absolute values along the diagonal.
    :param A: The matrix to sort
    :return: The sorted matrix
    """

    #help from ChatGPT

    n = A.shape[0]

    #Checks to check if Matrix is already Diag Dom
    def isDiagDom(A):
        for i in range(n):
            row_sum = sum(abs(A[i, j]) for j in range(n) if j != i)
            if abs(A[i, i]) < row_sum:
                return false
        return True

    #Rearrange rows for Diag Dom
    def find_best_row(i):
        max_val = 0
        best_row = -1
        for j in range(i, n):
            row_sum = sum(abs(A[j, k]) for k in range(n) if k != j)
            if abs(A[j, i]) >= row_sum and abs(A[j, i]) > max_val:
                max_val = abs(A[j, i])
                best_row = j
        return best_row

    # Rearrange the matrix to be diagonally dominant
    for i in range(n):
        best_row = find_best_row(i)
        if best_row != -1 and best_row != i:
            A[[i, best_row]] = A[[best_row, i]]  # Swap rows

    # Verify if the rearranged matrix is diagonally dominant
    if isDiagDom(A):
        return A
    else:
        print("Cannot make the matrix diagonally dominant with this method.")
        return None
